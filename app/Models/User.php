<?php

namespace App\Models;

use App\Helpers\MessageHelper;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Hash;
use Spatie\Permission\Traits\HasRoles;

class User extends Authenticatable
{
    use Notifiable, HasRoles;

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'name', 'email', 'password',
    ];

    /**
     * The attributes that should be hidden for arrays.
     *
     * @var array
     */
    protected $hidden = [
        'password', 'remember_token',
    ];

    /**
     * The attributes that should be cast to native types.
     *
     * @var array
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
    ];

    public function update(array $attributes = [], array $options = [])
    {
        return parent::update($attributes, $options); // TODO: Change the autogenerated stub
    }

    public static function updateCurrentUser(array $request)
    {
        $success = MessageHelper::MESSAGE_TYPE_SUCCESS;
        $message = MessageHelper::SAVED_SUCCESSFULLY_TEXT;

        $user = Auth::user()->update([
            'name' => $request['name'],
            'email' => $request['email'],
            'password' => $request['password'] ? Hash::make($request['password']) : Auth::user()->getAuthPassword()
        ]);

        if (!$user) {
            $success = MessageHelper::MESSAGE_TYPE_ERROR;
            $message = MessageHelper::ERROR_ON_SAVING_TEXT;
        }
        MessageHelper::flash($success, $message);
    }

    public function profile()
    {
        return $this->hasOne(Profile::class);
    }
}
